version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: volkai-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: volkai_hr_edu
      POSTGRES_USER: volkai_user
      POSTGRES_PASSWORD: volkai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - volkai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U volkai_user -d volkai_hr_edu"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: volkai-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass volkai_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - volkai-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: volkai-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Application
      NODE_ENV: production
      PORT: 3000
      API_PREFIX: api/v1
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: volkai_user
      DB_PASSWORD: volkai_password
      DB_DATABASE: volkai_hr_edu
      DB_SYNCHRONIZE: false
      DB_LOGGING: false
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: volkai_redis_password
      REDIS_DB: 0
      
      # JWT (Use strong secrets in production)
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      JWT_REFRESH_EXPIRES_IN: 7d
      
      # Email (Configure with your SendGrid API key)
      EMAIL_PROVIDER: sendgrid
      SENDGRID_API_KEY: ${SENDGRID_API_KEY:-}
      EMAIL_FROM: noreply@volkaihr.com
      EMAIL_FROM_NAME: Volkai HR Edu
      
      # Security
      BCRYPT_ROUNDS: 12
      CORS_ORIGIN: http://localhost:3001
      
      # Rate Limiting
      RATE_LIMIT_TTL: 60
      RATE_LIMIT_MAX: 100
      
      # Logging
      LOG_LEVEL: info
      
      # URLs
      FRONTEND_URL: http://localhost:3001
      BACKEND_URL: http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - api_logs:/app/logs
    networks:
      - volkai-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: volkai-nginx
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - volkai-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  api_logs:
    driver: local

networks:
  volkai-network:
    driver: bridge
